on: [push]

name: build

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        cabal: ["3.10.1.0"]
        ghc: ["9.2.8"]
    name: GHC ${{ matrix.ghc }}
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - run: cp cabal.project.dist cabal.project

      - name: Configure the build
        # generates dist-newstyle/cache/plan.json for the cache key
        run: cabal build --dry-run

      - name: Restore cached dependencies
        uses: actions/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - run: cabal build

      - name: Cache dependencies
        uses: actions/cache/save@v3
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}
